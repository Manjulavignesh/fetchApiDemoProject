{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANJULA\\\\react-app\\\\dummyProject\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function dataHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/fil/\");\n      if (!response.ok) {\n        throw new Error('Something Went Wrong...Retry!!!');\n      }\n      const data = await response.json();\n      const tranformedMovies = data.results.map(movies => {\n        return {\n          id: movies.episode_id,\n          title: movies.title,\n          openingText: movies.opening_crawl,\n          releaseDate: movies.release_date\n        };\n      });\n      setMovie(tranformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dataHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movie.length == 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 53\n      }, this), !isLoading && movie.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SnB+xgD4hIoUWohg4/2pDTqt3NI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movie","setMovie","isLoading","setIsLoading","error","setError","dataHandler","response","fetch","ok","Error","data","json","tranformedMovies","results","map","movies","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/MANJULA/react-app/dummyProject/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movie,setMovie]=useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n  async function dataHandler(){\n    setIsLoading(true);\n    setError(null)\n    try{\n      const response=await fetch(\"https://swapi.dev/api/fil/\");\n      if(!response.ok){\n        throw new Error('Something Went Wrong...Retry!!!');\n      }\n    const data=await response.json();\n    const tranformedMovies=data.results.map((movies)=>{\n      return {\n        id:movies.episode_id,\n        title:movies.title,\n        openingText:movies.opening_crawl,\n        releaseDate:movies.release_date\n      }\n    })\n    setMovie(tranformedMovies);\n    }\n    catch(error){\n      setError(error.message);\n    }\n    setIsLoading(false);\n\n}\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={dataHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movie.length==0 && !error && <p>No Movies found...</p>}\n        {!isLoading && movie.length>0 && <MoviesList movies={movie} />}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && error && <p>{error}</p>}\n        </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAEpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EACrC,eAAeY,WAAWA,CAAA,EAAE;IAC1BH,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAG;MACD,MAAME,QAAQ,GAAC,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MACxD,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACpD;MACF,MAAMC,IAAI,GAAC,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAChC,MAAMC,gBAAgB,GAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAG;QAChD,OAAO;UACLC,EAAE,EAACD,MAAM,CAACE,UAAU;UACpBC,KAAK,EAACH,MAAM,CAACG,KAAK;UAClBC,WAAW,EAACJ,MAAM,CAACK,aAAa;UAChCC,WAAW,EAACN,MAAM,CAACO;QACrB,CAAC;MACH,CAAC,CAAC;MACFtB,QAAQ,CAACY,gBAAgB,CAAC;IAC1B,CAAC,CACD,OAAMT,KAAK,EAAC;MACVC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;IACzB;IACArB,YAAY,CAAC,KAAK,CAAC;EAEvB;EAGE,oBACEN,OAAA,CAACJ,KAAK,CAACgC,QAAQ;IAAAC,QAAA,gBACb7B,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAQ8B,OAAO,EAAErB,WAAY;QAAAoB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACVlC,OAAA;MAAA6B,QAAA,GACG,CAACxB,SAAS,IAAIF,KAAK,CAACgC,MAAM,IAAE,CAAC,IAAI,CAAC5B,KAAK,iBAAIP,OAAA;QAAA6B,QAAA,EAAG;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACpE,CAAC7B,SAAS,IAAIF,KAAK,CAACgC,MAAM,GAAC,CAAC,iBAAInC,OAAA,CAACF,UAAU;QAACqB,MAAM,EAAEhB;MAAM;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7D7B,SAAS,iBAAIL,OAAA;QAAA6B,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC9B,CAAC7B,SAAS,IAAIE,KAAK,iBAAIP,OAAA;QAAA6B,QAAA,EAAItB;MAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAErB;AAAChC,EAAA,CA5CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}