{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANJULA\\\\react-app\\\\dummyProject\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    dataHandler(), [];\n  });\n  const dataHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong...Retry!!!\");\n      }\n      const data = await response.json();\n      const tranformedMovies = data.results.map(movies => {\n        return {\n          id: movies.episode_id,\n          title: movies.title,\n          openingText: movies.opening_crawl,\n          releaseDate: movies.release_date\n        };\n      });\n      setMovie(tranformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Movies found...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 17\n  }, this);\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }, this);\n  }\n  if (movie.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dataHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uFrpPyrD9xZs5NE0cfGmHu8S01E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MoviesList","useCallback","jsxDEV","_jsxDEV","App","_s","movie","setMovie","isLoading","setIsLoading","error","setError","dataHandler","response","fetch","ok","Error","data","json","tranformedMovies","results","map","movies","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANJULA/react-app/dummyProject/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { useCallback } from \"react\";\n\nfunction App() {\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    dataHandler(), [];\n  });\n  const dataHandler =useCallback(async ()=> {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error(\"Something Went Wrong...Retry!!!\");\n      }\n      const data = await response.json();\n      const tranformedMovies = data.results.map((movies) => {\n        return {\n          id: movies.episode_id,\n          title: movies.title,\n          openingText: movies.opening_crawl,\n          releaseDate: movies.release_date,\n        };\n      });\n      setMovie(tranformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  },[])\n  let content = <p>No Movies found...</p>;\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (movie.length > 0) {\n    content = <MoviesList movies={movie} />;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={dataHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}