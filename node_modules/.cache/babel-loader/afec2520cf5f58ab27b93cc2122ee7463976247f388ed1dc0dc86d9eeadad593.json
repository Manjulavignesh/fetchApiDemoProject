{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANJULA\\\\react-app\\\\dummyProject\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffe;\n  async function dataHandler() {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        throw new Error('Something Went Wrong...Retry!!!');\n      }\n      const data = await response.json();\n      const tranformedMovies = data.results.map(movies => {\n        return {\n          id: movies.episode_id,\n          title: movies.title,\n          openingText: movies.opening_crawl,\n          releaseDate: movies.release_date\n        };\n      });\n      setMovie(tranformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Movies found...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this);\n  }\n  if (movie.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(MoviesList, {\n      movies: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dataHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SnB+xgD4hIoUWohg4/2pDTqt3NI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movie","setMovie","isLoading","setIsLoading","error","setError","useEffe","dataHandler","response","fetch","ok","Error","data","json","tranformedMovies","results","map","movies","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","content","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Fragment","onClick","_c","$RefreshReg$"],"sources":["C:/Users/MANJULA/react-app/dummyProject/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movie,setMovie]=useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n  useEffe\n  async function dataHandler(){\n    setIsLoading(true);\n    setError(null)\n    try{\n      \n      const response=await fetch(\"https://swapi.dev/api/films/\");\n      if(!response.ok){\n        throw new Error('Something Went Wrong...Retry!!!');\n      }\n      const data=await response.json();\n    const tranformedMovies=data.results.map((movies)=>{\n      return {\n        id:movies.episode_id,\n        title:movies.title,\n        openingText:movies.opening_crawl,\n        releaseDate:movies.release_date\n      }\n    })\n    setMovie(tranformedMovies);\n    }\n    catch(error){\n      setError(error.message);\n    }\n    setIsLoading(false);\n\n}\nlet content=<p>No Movies found...</p>;\nif(isLoading){\n  content=<p>Loading...</p>;\n}\nif(error){\n  content=<p>{error}</p>}\n\nif(movie.length>0){\n  content=<MoviesList movies={movie} />\n}\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={dataHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {content}\n        </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}