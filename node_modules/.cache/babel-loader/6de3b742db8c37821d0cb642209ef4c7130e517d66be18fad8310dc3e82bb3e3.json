{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MANJULA\\\\react-app\\\\dummyProject\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movie, setMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  async function dataHandler() {\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    const tranformedMovies = data.results.map(movies => {\n      return {\n        id: movies.episode_id,\n        title: movies.title,\n        openingText: movies.opening_crawl,\n        releaseDate: movies.release_date\n      };\n    });\n    setMovie(tranformedMovies);\n    setIsLoading(true);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: dataHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movie.length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 43\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"h9LB6VFqVFEIjzZtSo80+UU5sfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movie","setMovie","isLoading","setIsLoading","dataHandler","response","fetch","data","json","tranformedMovies","results","map","movies","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/MANJULA/react-app/dummyProject/002 01-starting-project (1)/01-starting-project/src/App.js"],"sourcesContent":["import React,{useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movie,setMovie]=useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  async function dataHandler(){\nconst response=await fetch(\"https://swapi.dev/api/films/\");\nconst data=await response.json();\nconst tranformedMovies=data.results.map((movies)=>{\n  return {\n    id:movies.episode_id,\n    title:movies.title,\n    openingText:movies.opening_crawl,\n    releaseDate:movies.release_date\n  }\n})\nsetMovie(tranformedMovies);\nsetIsLoading(true);\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={dataHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        \n        {!isLoading && movie.length==0 && <p>No Movies found...</p>}\n        {isLoading && <p>Loading...</p>}\n        \n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAEpC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAC9C,eAAeU,WAAWA,CAAA,EAAE;IAC9B,MAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC1D,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChC,MAAMC,gBAAgB,GAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAG;MAChD,OAAO;QACLC,EAAE,EAACD,MAAM,CAACE,UAAU;QACpBC,KAAK,EAACH,MAAM,CAACG,KAAK;QAClBC,WAAW,EAACJ,MAAM,CAACK,aAAa;QAChCC,WAAW,EAACN,MAAM,CAACO;MACrB,CAAC;IACH,CAAC,CAAC;IACFlB,QAAQ,CAACQ,gBAAgB,CAAC;IAC1BN,YAAY,CAAC,IAAI,CAAC;EAChB;EAGA,oBACEN,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbxB,OAAA;MAAAwB,QAAA,eACExB,OAAA;QAAQyB,OAAO,EAAElB,WAAY;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACV7B,OAAA;MAAAwB,QAAA,GAEG,CAACnB,SAAS,IAAIF,KAAK,CAAC2B,MAAM,IAAE,CAAC,iBAAI9B,OAAA;QAAAwB,QAAA,EAAG;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC1DxB,SAAS,iBAAIL,OAAA;QAAAwB,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAExB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC3B,EAAA,CAhCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}